# Generated by Django 4.1.3 on 2022-11-18 20:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('selected', models.BooleanField(default=False)),
                ('category', models.ManyToManyField(to='core.category')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('uuid', models.UUIDField()),
                ('author', models.CharField(max_length=200)),
                ('total_time', models.PositiveSmallIntegerField()),
                ('prep_time', models.PositiveSmallIntegerField()),
                ('cook_time', models.PositiveSmallIntegerField()),
                ('difficulty', models.CharField(choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], max_length=200)),
                ('favorited', models.BooleanField(default=False)),
                ('planner', models.BooleanField(default=False)),
                ('custom', models.BooleanField(default=False)),
                ('step1', models.TextField(default='')),
                ('step2', models.TextField(blank=True, default='')),
                ('step3', models.TextField(blank=True, default='')),
                ('step4', models.TextField(blank=True, default='')),
                ('step5', models.TextField(blank=True, default='')),
                ('step6', models.TextField(blank=True, default='')),
                ('step7', models.TextField(blank=True, default='')),
                ('step8', models.TextField(blank=True, default='')),
                ('step9', models.TextField(blank=True, default='')),
                ('step10', models.TextField(blank=True, default='')),
                ('step11', models.TextField(blank=True, default='')),
                ('step12', models.TextField(blank=True, default='')),
                ('step13', models.TextField(blank=True, default='')),
                ('step14', models.TextField(blank=True, default='')),
                ('step15', models.TextField(blank=True, default='')),
                ('step16', models.TextField(blank=True, default='')),
                ('step17', models.TextField(blank=True, default='')),
                ('step18', models.TextField(blank=True, default='')),
                ('step19', models.TextField(blank=True, default='')),
                ('step20', models.TextField(blank=True, default='')),
                ('genres', models.ManyToManyField(to='core.genre')),
                ('ingredients', models.ManyToManyField(to='core.ingredient')),
            ],
        ),
        migrations.CreateModel(
            name='DiaryEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe_name', models.CharField(blank=True, max_length=200)),
                ('date_cooked', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.recipe')),
            ],
        ),
    ]
